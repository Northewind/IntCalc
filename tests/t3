;Testing of
;1. Comparing operations
;2. Procedure calls
;3. Forward unconditional jumping

test1:	mov r1, 10 12
	mov r2, 12 10.0
	cmp r1, r2
	je equal
	jmp badans
equal:	call ogood
test2:	mov r1, 10 12
	mov r2, 16 18
	cmp r1, r2
	jne noteq
	jmp badans
noteq:	call ogood
test3:	mov r1, 10 12
	mov r2, 5 9
	cmp r1, r2
	jgt great
	jmp badans
great:	call ogood
test4:	mov r1, 10 12
	mov r2, 5 11
	cmp r1, r2
	jge gequal
	jmp badans
gequal:	call ogood
test5:	mov r1, 10 12
	mov r2, 16 18
	cmp r1, r2
	jlt lesse
	jmp badans
lesse:	call ogood
test6:	mov r1, 10 12
	mov r2, 11 18
	cmp r1, r2
	jle lequal
	jmp badans
lequal:	call ogood
test7:  mov r1, 10 12
	mov r2, 5 20
	cmp r1, r2
	jin insid
	jmp badans
insid:	call ogood
test8:  mov r1, 10 12
	mov r2, 11.
	cmp r1, r2
	jout outsi
	jmp badans
outsi:	call ogood
	out "All tests passed"
	jmp exit
badans:	call obad
exit:	hlt


;Procedures
;==========

ohead:	out "Test #"
	inc r3
	out r3
	out "Comparing of:"
	out "r1 ="
	out r1
	out "r2 ="
	out r2
	ret

ogood:	call ohead
	out "Good!"
	out ""
	ret

obad:	call ohead
	out "Bad..."
	out ""
	ret
