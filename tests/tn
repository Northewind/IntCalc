task_fig14:
		mov r1, 30  1 -1
		mov r2, 120 1 -1
		mov r3, 100 1 -1
		call fig14
		out "Результат по фиг. 14:"
		out r100
		hlt

fig14:		mov r101, r1
		mov r102, r2
		tan r101
		tan r102
		mov r100, r3
		mul r100, r101
		mul r100, r102
		add r101, r102
		div r100, r101
		ret




task_fig27:	;Исходные данные
		mov r1, 50 -0.5  0.5		;r1 = x[1] = 50
		mov r2, 45 -0.5  0.5		;r2 = x[2] = 45
		mov r3, 70 -0.3  0.3		;r3 = x[3] = 70
		mov r4, 50 -0.5  0.5		;r4 = x[4] = 50
		mov r5, 20 -0.2  0.2		;r5 = x[5] = 20
		mov r6, 7  -0.5  0.5		;r6 = x[6] = 7
		call fig27			;Вызываем процедуру расчёта - fig27
		out "Результат:"
		out r100
		hlt				;Выход

;Расчёт по фиг. 27
;Вход: r1...r6 - размеры x[1]...x[6]
;Выход: r100
;Используются (значения будут потеряны): r100, r101, r103, r105
fig27:		mov r103, r3			;r3
		mov r105, r5			;r5
		tan r103			;tan(r3)
		tan r105			;tan(r5)
		mov r100, 0
		sub r100, r4			;-r4
		sub r100, r6			;-r4-r6
		mov r101, r103
		mul r101, r1			;r1*tan(r3)
		add r100, r101			;r1*tan(r3)-r4-r6
		mov r101, r105
		mul r101, r2			;r2*tan(r5)
		add r100, r101			;r1*tan(r3)+r2*tan(r5)-r4-r6
		sub r103, r105			;tan(r3)-tan(r5)
		div r100, r103
		ret




task5:		mov r1, 1.0 1.6
		call expon			;r2 = e^r1
		out r2
		hlt

;Экспонента e^x
;Вход:  r1
;Выход: r2
;Используются (значения будут потеряны): r3, r4, r5, r6
expon:		mov r2, 1			;Сумма
		mov r3, 1			;Счётчик цикла
		mov r4, 1			;Числитель текущей дроби
		mov r5, 1			;Знаменатель текущей дроби
loop:		mul r4, r1
		mul r5, r3
		mov r6, r4
		div r6, r5
		add r2, r6
		inc r3
		cmp r3, 1000
		jlt loop
		ret




task4:		;Исходные данные:
		mov r1, 0.27			;r1 = δD
		mov r2, 0.43			;r2 = δd 
		mov r3, 30 +1 -1		;r3 = α
		mov r4, 0.74			;r4 = δH
		;Вычисляем:
		div r3, 2			;α/2
		tan r3				;tg (α/2)
		mul r3, 2			;2 tg (α/2)
		add r1, r2			;δD + δd
		div r1, r3			;(δD + δd) / (2 tg (α/2))
		add r1, r4			;(δD + δd) / (2 tg (α/2)) + δH
		;Результат в r1, выводим:
		out r1
		hlt




task3:		;Вводим исходные данные
		mov		r1, 90 -1 1		;r1 = α = 90±1
		mov		r2, 0.43		;r2 = δD = 0,43
		;Вычисления по формуле
		div		r1, 2			;α/2
		sin		r1			;sin(α/2)
		inv		r1			;1/sin(α/2)
		dec		r1			;1/sin(α/2) - 1
		div		r2, 2			;δD/2
		mul		r1, r2			;δD/2 * (1/sin(α/2)-1)
		;Результат в r1, выводим
		out		"E_H1 = "
		out		r1
		hlt




task2:		;Исходные данные
		mov  r1,  20  0  +5		;r1 - размер α
		mov  r2,  50  -0.2 +0.2		;r2 - размер A
		mov  r10, 70  -2  +5		;r10 - размер β
		mov  r20, 40  -0.15  +0.15	;r20 - размер B
		;Вычисляем
		neg  r10
		add  r10,  180			;180 - β
		add  r10,  r1			;α + 180 - β
		cos  r10			;cos (α + 180 - β)
		mul  r10, r2			;cos (α + 180 - β)*A
		mul  r10, r20			;cos (α + 180 - β)*A*B
		mul  r10, 2			;cos (α + 180 - β)*A*B*2
		neg  r10			;-cos (α + 180 - β)*A*B*2
		mul  r20, r20			;B*B
		mul  r2,  r2			;A*A
		add  r10, r20			;cos (α + 180 - β)*A*B*2 + B*B
		add  r10, r2			;cos (α + 180 - β)*A*B*2 + B*B + A*A
		sqrt r10
		;Выводим результат
		out  r10
		hlt




task1:		mov r1, 20  -0.1  0.1		;r1 - размер А
		mov r2, 30  -0.05  0.05		;r2 - размер α
		call tria1
		;Вывод результатов
		out "Bh = "
		out r3
		out "Bv = "
		out r4
		hlt

;Вычисление Bh и Bv
;Вход: r1 - размер A
;      r2 - размер α
;Выход: r3 - размер Bh
;       r4 - размер Bv
tria1:		mov r3, r2				;r3 = α
		cos r3					;r3 = cos (r3)
		mul r3, r1				;r3 = r3 * r1
		mov r4, r2				;r4 = α
		sin r4					;r4 = sin (r4)
		mul r4, r1				;r4 = r4 * r1
		ret




;Example of CALL/RET usage
task0:	 	mov  r1, 49.6  50		;Размер по чертежу
		mov  r2, 50.2			;Размер факт., дет №1
		call print_quality_conc		;Вызов print_quality_conc
		mov  r2, 49.8			;Размер факт., дет №2
		call print_quality_conc		;Вызов print_quality_conc
		mov  r2, 50			;Размер факт., дет №3
		call print_quality_conc		;Вызов print_quality_conc
		hlt

;Вывод сообщения о годности
;Вход: r1 - размер по чертежу
;      r2 - размер фактический
print_quality_conc:
		cmp  r2, r1
		jin  part_good
		out  "The part has defect"
		ret				;Выход из подпрограммы
part_good:	out "The part is good"
		ret				;Выход из подпрограммы

